% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/prep_geonames.R
\name{prep_geonames}
\alias{prep_geonames}
\title{Interactive Admin Name Cleaning and Matching}
\usage{
prep_geonames(
  target_df,
  lookup_df,
  adm0 = NULL,
  adm1 = NULL,
  adm2 = NULL,
  save_alias_df_path = NULL,
  method = NULL,
  stratify = TRUE
)
}
\arguments{
\item{target_df}{Data frame containing the admin names to clean.}

\item{lookup_df}{Lookup data frame for verifying admin names.}

\item{adm0}{adm0 col name (country) in both 'data' and 'lookup_data'.}

\item{adm1}{adm1 col name (province) in both 'data' and 'lookup_data'.}

\item{adm2}{adm2 col name (district) in both 'data' and 'lookup_data'.}

\item{save_alias_df_path}{Optional; the path where the alias data frame is
saved after user modifications. This path is also used to match and
integrate previously established  corrections into the current
session. If NULL or the file does not exist at the provided path,
users will be prompted to specify a new path or create a new alias
data frame.}

\item{method}{The string distance calculation method(s) to be used. Users
can specify one or more algorithms from the
\code{\link[stringdist]{stringdist}} package to compute
string distances between admin names. If left NULL, the function
defaults to using a comprehensive set of algorithms, applying them in
parallel to identify and rank the best matches based on closeness.
The default methods include: \code{"lv"} (Levenshtein), \code{"dl"}
(Damerau-Levenshtein), \code{"lcs"} (Longest Common Subsequence),
\code{"qgram"} (Q-Gram), \code{"jw"} (Jaro-Winkler), and
\code{"soundex"}.}

\item{stratify}{Logical; if TRUE, performs cleaning stratified by
admin levels to maintain hierarchical consistency.}
}
\value{
A data frame with cleaned administrative names and saved data frame
of users decisions.
}
\description{
This function streamlines the admin name cleaning process, leveraging both
algorithmic approaches and interactive user decisions. It is inspired by the
string distance matching of the
\code{\link[epiCleanr]{clean_admin_names}} function (by Mo
Yusuf at WHO AFRO) and the interactivity of \code{alias_to_plias} in the \code{stanley}
package by Steve Kroiss from BMGF. It combines string distance algorithms for
initial matching and offers user interactivity for final decision-making,
which are then saved for future reference and sharing. Although the function
does not require limiting name matching exclusively to upper-level admins,
optimal performance is achieved by confining to stricter
within-admin stratifications (through the use of stratify function option),
ensuring more accurate results.
}
\details{
The function performs the following steps:
\enumerate{
\item Prepares the data by ensuring administrative names are in uppercase for
consistent matching.
\item Attempts to load a previously saved alias file if available, or
initializes the cleaning process.
\item Matches administrative names between \code{target_df} and \code{lookup_df} using
string distance algorithms, running in parallel. Results are ranked by
closeness.
\item Engages the user through an interactive CLI menu to make decisions on
ambiguous matches, leveraging the \code{cli} package for enhanced usability.
\item Saves the user's decisions in an alias data frame, either to a specified
path or by prompting the user for a location.
\item Returns a cleaned data frame with updated administrative names based on
user choices and algorithmic matching.
}
}
\examples{
# dummy target data
# target_df <- data.frame(
#   country = c("Country1", "Country2"),
#   province = c("State1", "State2"),
#   district = c("City1", "City2")
# )
# dummy lookup data
# lookup_df <- data.frame(
#   country = c("Country1", "Country3"),
#   province = c("State1", "State3"),
#   district = c("City1", "City3")
# )
# 
# interactively clean geonames
# prep_geonames(
#   target_df, lookup_df,
#   adm0 ="country", adm1 = 'province',
#   adm2 = "district"
# )

}
