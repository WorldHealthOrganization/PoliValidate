% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/validate_data.R
\name{create_summary_by_group}
\alias{create_summary_by_group}
\title{Create Summary by Group}
\usage{
create_summary_by_group(
  data,
  group_var,
  id_col,
  geo_name_cols,
  geo_id_cols,
  lat_long_cols,
  date_cols,
  date_pair_cols,
  shapefile_data = NULL,
  shapefile_join_key = NULL,
  correct_lat_col = NULL,
  correct_lon_col = NULL,
  shapefile_name_cols = NULL,
  shapefile_id_cols = NULL,
  run_missing_check = TRUE,
  run_date_check = TRUE,
  run_geo_hierarchy_check = TRUE,
  run_geo_mismatch_check = TRUE,
  run_coordinate_checks = TRUE,
  run_detections = FALSE,
  coordinate_checks = c("flip", "on_water", "missing", "out_of_bounds", "precision",
    "null_coords", "parse"),
  n_groups = 4,
  decreasing = FALSE
)
}
\arguments{
\item{data}{A data frame containing the dataset to be summarized.}

\item{group_var}{The name of the column to group by.}

\item{id_col}{The name of the column containing unique identifiers.}

\item{geo_name_cols}{A vector of column names containing geographic names.}

\item{geo_id_cols}{A vector of column names containing geographic IDs.}

\item{lat_long_cols}{A vector of column names for latitude and longitude.}

\item{date_cols}{A vector of column names containing dates.}

\item{date_pair_cols}{A list of date column pairs to be checked together.}

\item{shapefile_data}{Optional data frame containing shapefile data for
geographic comparisons.}

\item{shapefile_join_key}{Optional character string specifying the join key
for the shapefile data.}

\item{correct_lat_col}{Optional character string specifying the column name
for correct latitude in shapefile data.}

\item{correct_lon_col}{Optional character string specifying the column name
for correct longitude in shapefile data.}

\item{shapefile_name_cols}{Optional character vector of column names in
shapefile data containing geographic names.}

\item{shapefile_id_cols}{Optional character vector of column names in
shapefile data containing geographic IDs.}

\item{run_missing_check}{Logical; if TRUE, runs missing data check (default
is TRUE).}

\item{run_date_check}{Logical; if TRUE, runs date validation check (default
is TRUE).}

\item{run_geo_hierarchy_check}{Logical; if TRUE, runs geographic hierarchy
check (default is TRUE).}

\item{run_geo_mismatch_check}{Logical; if TRUE, runs geographic mismatch
check (default is TRUE).}

\item{run_coordinate_checks}{Logical; if TRUE, runs coordinate validation
checks (default is TRUE).}

\item{run_detections}{Logical, whether to run virus detections checks.}

\item{coordinate_checks}{Character vector specifying which coordinate checks
to run.}

\item{n_groups}{The number of groups to include in the summary (def is 4).}

\item{decreasing}{Logical; if TRUE, sorts groups in decreasing order (default
is TRUE).}
}
\value{
A data frame containing the combined summary of data quality checks
for each group.
}
\description{
This function creates a summary of data quality checks grouped by a specified
variable.
}
\details{
This function performs the following steps:
\enumerate{
\item Selects unique groups based on the specified group variable.
\item For each group, it runs data quality checks using \code{check_data}.
\item Creates a summary table for each group using the \code{create_summary_table}
function.
\item Combines the results into a single data frame, with groups as columns.
}
}
\examples{
# summary <- create_summary_by_group(
#   data = my_data,
#   group_var = "Region",
#   id_col = "ID",
#   geo_name_cols = c("Country", "State", "City"),
#   geo_id_cols = c("CountryID", "StateID", "CityID"),
#   lat_long_cols = c("Latitude", "Longitude"),
#   date_cols = c("Date1", "Date2"),
#   date_pair_cols = list(c("Date1", "Date2")),
#   n_groups = 3,
#   decreasing = TRUE
# )

}
